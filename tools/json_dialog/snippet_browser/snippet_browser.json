{
  "StyleData": {
    "Font": "Lato",
    "BoldFont": "<Sans-Serif>",
    "FontSize": 18.0,
    "bgColour": 4281545523,
    "codeBgColour": 864585864,
    "linkBgColour": 8947967,
    "textColour": 4294967295,
    "codeColour": 4294967295,
    "linkColour": 4289374975,
    "tableHeaderBgColour": 864059520,
    "tableLineColour": 864059520,
    "tableBgColour": 864059520,
    "headlineColour": 4287692721,
    "UseSpecialBoldFont": false
  },
  "Properties": {
    "Header": "Header",
    "Subtitle": "Subtitle",
    "Image": "",
    "ProjectName": "SnippetBrowser",
    "Company": "HISE",
    "Version": "1.0.0",
    "BinaryName": "My Binary",
    "UseGlobalAppData": false,
    "Icon": ""
  },
  "LayoutData": {
    "StyleSheet": "Dark",
    "Style": "body\n{\n\tfont-size: 15px;\t\n}\n\n\n\n#footer,\n#header\n{\n\tdisplay: none;\n}\n\n\n\n#content\n{\n\tpadding: 15px;\n\talign-items: flex-start;\n\tbackground: #333;\n\tbox-shadow: inset 0px 0px 5px black;\n\tpadding-top: 24px;\n\t\n}\n\n#content::before\n{\n\tcontent: '';\n\n\tbackground: #222;\n\theight: 20px;\n\tborder-bottom: 1px solid #555;\n}\n\n.header-label\n{\n\tfont-size: 1.1em;\n\tfont-weight: bold;\n\tbackground: linear-gradient(to bottom, #222, #202020);\n\tcolor: #ddd;\n\tborder-radius: 4px;\n\tpadding: 0px;\n}\n\n\n\n.toggle-button\n{\n\tbackground: transparent;\n}\n\n.toggle-button:hover\n{\n\tbackground: transparent;\n}\n\n.tag-button\n{\n\tfont-size: 13px;\n}\n\n.category-button\n{\n\ttransform: none;\n\tpadding: 0px;\n\tcolor: #bbb;\n\twidth: auto;\n\tfont-size: 14px !important;\n\tfont-weight: 500;\n\tborder-radius: 0px;\n\tbackground: #242424;\n\theight: 28px;\n}\n\n.category-button button:hover\n{\n\tcolor: #eee;\n\tbackground: #222;\n}\n\n.category-button:active\n{\n\tcolor: #fff;\n\t\n\ttransform: scale(98%);\n\t\n}\n\n.category-button:checked\n{\n\tbackground: #bbb;\n\tcolor: #222;\n}\n\n.first-child\n{\n\tborder-radius: 50% 0px 50% 0px;\n}\n\n.last-child\n{\n\tborder-radius: 0% 50% 0% 50%;\n}\n\n.category-button::before\n{\n\tdisplay:none;\n}\n\n.category-button::after\n{\n\tdisplay:none;\n}\n\n\n#searchBar label\n{\n\tdisplay: none;\n}\n\n#searchBar input\n{\n\tpadding-left: 100vh;\n\theight: 32px;\n}\n\n#searchBar input::before\n{\n\tcontent: '';\n\twidth: 100vh;\n\tbackground-image: \"332.t0lHDd.QGD+iCI159e.QO.jZCkBBSPjNL8yPg4HHDoCS+LjXUJlKDoCS+LzvblCQxSCaCMLm4PD3BG4PhMLm4PTiky4PWq7MDoCLmNzM2RCQDK3qCw1++UDQ4QQzCw1Mc+CQimE2CwFFF7BQ.tptCIVluqBQ7bGvCQX7kPToeO7Pg4HHDU52COjXrnqDDU52COz++c.QIsVqC8+eGPD3BG4Ph8+eGPTgRE4PoB3ADoo3PNDIBd.Q6KGjCwF4P9.Q6KGjCIlzN9.Q0INjCcaiOPzWRE4P213CDAtvQNjX213CDs1gjNDGrbAQ1P7rCElifPjMDO6PhYJ7oPjMDO6P26XLDs1gjNz8NFCQfKbjCI18NFCQrxeeCYJ7oPTYC90Pg4HHDU1feMjX8n2EDU1feMDEM.AQPl.eCo8jOPzAw+3PrIBgGPzAw+3PiUF\";\n\tmargin: 7px;\n\tbackground: #333;\n\t\n}\n\n#snippetList\n{\n\tflex-grow: 1;\n\theight: auto;\n}\n\n\n.description\n{\n\tbackground: #282828;\n\tpadding: 10px;\n}\n\nth\n{\n\tfont-size: 1em;\n}\n\n.setup-page label\n{\n\tmin-width: 0px;\n}\n\n.setup-page button\n{\n\tpadding: 10px 10px;\n}\n\n\n\n.top-button\n{\n\tflex-grow: 0;\n\theight: 32px;\n\twidth: 32px;\n\tbackground: transparent;\n}\n\n.top-button:hover\n{\n\tbackground: transparent;\n}\n\n.top-button::before\n{\n\tborder: 0px;\n\tbackground: #bbb;\n}\n\n#addButton\n{\n\tmargin: 2px;\n}\n\n#addButton::before\n{\n\t\n\tbackground-image: \"320.t010HCBQd5VpCw1kao.Qd5VpCI1yGi.Qd5VpCA.fGPD8da5P..3ADAvsiNDa..3ADALRXNjX..3ADoTHUNzyGi.QfFojCc4VJPDnQJ4PrcMxfPDnQJ4PrcMxfPjbtszPhcMxfPDUeTzPrBgHDgA..MzYjNBQX..PCw1gakBQX..PCIlPuqBQX..PCgwMrPDUeTzPXbCKDImaKMDaXbCKDAZjRNDavQpPDAZjRNjXrfCQDAZjRND..VDQJERkCA.fEQDvHg4PrA.fEQD.2N5PhA.fEQD8da5PrfCQD4oaoNDbjJDQd5VpCwFF2vBQd5VpCwFF2vBQSij0CIFF2vBQIAW1CIz6pPz7+u8PGtUJDM++aODamQ5HDM++aOjXrBgHDM++aOz0HCBQIAW1CcMxfPzzHY8PrcMxfPjmtk5PiUF\";\n\n}\n\n#settingButton::before\n{\n\tbackground-image: \"598.t0lBhtBQ.ADQCIFF7fBQPgePCE+vjPDT3GzPH3UHDADPDMDa3rAHDQytdMjXrRQGDw+7gMjE7nAQb71YC48sWPDui61Pr8XvQPDyQI1PhISLOPDiFt1PvcPCDQLX1Mz.as.QhXSfCwly99.Q5B2hCI1K84.Q1yRjC4SxMPDtUc4P3wZCD45kcNDa..3ADIy+hNjXsM6ADYA3oNDC4g.QHQJrCYLxIPjoCb6ProNgPPjTFZ6Phol9QPD1Pv6PXJ+DDYU.AOj6RYAQFUQwCwlYVRAQtsgzCIl6lcAQzUg0CswgZPDnWj8PoXcGDY8.aODaYgcHDQnKPOjX1tNIDItVQODWTfBQhqUzCg6IqPDgt.8PrAdJuPj0Cr8Ph0NdxPDnWj8PijYMDQWEVOznogCQtsgzCwFIsZCQFUQwCIVdMjCQVEPvCgZA6PD1Pv6P5rGODIkg1NDadcyPDY5.2NjXXbHQDgDovNjhLUDQV.dpCA.fEQjL+K5Pr46T+PjqW14PhAqM+PDtUc4P+JnODYOKQNzWA0CQ5B2hCwFHkFDQhXSfCIVn3+CQDClcC4ry8PDiFt1Pn4yNDwbThMDapfTMDw63tMjXyOrLDwwamMjYq+BQ7OeXCkM4rPDM650ProfnqPDP.QzPi0FA.ZBQBIjhCIlwSwBQBIjhCAtCwPjy3N4Pf6PLDACXeNjXf6PLDA4AqNjwSwBQb3GsCQ.flPDG9Q6PhwDqfPDG9Q6PoD+FDA4AqNTJwuAQv.1mCIVJwuAQNi6jCwDqfPjPBo3PD.nIDIjPJNzXkA\";\n}\n\n#applyButton::before\n{\n\tbackground-image: \"75.t0F..d.QJxcrCwF..d.Q1MhhCw1mfjBQ1MhhCw1mfjBQnGnRCwF..VDQLAfmCw1mfjBQL7q0Cw1mfjBQJxcrCwF..d.QJxcrCMVY\";\n}\n\n#editButton\n{\n\tmargin: 2px;\n\tborder: 0px;\n}\n\n#editButton::before\n{\n\tcontent: '';\n\tbackground-image: \"206.t0VofuCQ19JgCwFYLhAQ2f0xCwlUc9.QanWtCw1kwKCQxLZYCwVofuCQ19JgCMVaVbvPD8c8HMjX..XQDYX1RMD..VDQWHtXCYwACQzoEy1Pr4Eg9PjhP62Pr8Tk0PTTTr0PrwqJ5Pjm9hzPhQaU6PTuRPzP2rNODktbAMDAR5CQoKWPCIVz3.DQoKWPC4jyAQTuRPzPFkuPD4ouHMDaVbvPD8c8HMzXsA.fGPDiFs8ProfqLPDUz86PrwQZUPDgpC8PrA.fGPDiFs8PiUF\";\n\tmargin: 5px;\n}\n\n#closeButton\n{\n\tmargin: 3px;\n}\n\n#closeButton::before\n{\n\tbackground-image: \t\"228.t0FXGUBQjNbqCw1Oo3.Q7++1CwF..d.Qx0pyCwFGd5AQBEGnCw12ZwAQBEGnCw12ZwAQ953lCwFGd5AQ953lCwF..d.QJTpVCw1Oo3.QH..PCwFXGUBQ.wiiCwFXGUBQJWahCwFj3dBQJWahCwFj3dBQ.wiiCw1tV6CQH..PCwF..VDQJTpVCwF0g4BQ953lCwVDkBCQ953lCwVDkBCQBEGnCwF0g4BQBEGnCwF..VDQx0pyCw1tV6CQ7++1CwFj3dBQjNbqCwFj3dBQdnjrCwFXGUBQdnjrCwFXGUBQjNbqCMVY\";\n}\n\n.top-button::before:hover\n{\n\tborder: 0px;\n\tbackground: #eee;\n}\n\n.top-button::after\n{\n\tdisplay: none;\n}\n\n#snippetDirectory label\n{\n\tdisplay: none;\n}\n\n.settings-panel label\n{\n\twidth: 80px;\n}\n\n#newName label\n{\n\tmax-width: 40px;\n\t\n}",
    "UseViewport": false,
    "DialogWidth": 400,
    "DialogHeight": 900
  },
  "GlobalState": {
    "snippetDirectory": "D:\\Development\\HISE Snippets",
    "snippetRoot": [
      "A ball shooting Game.md",
      "A simple OpenGL circle.md",
      "Array.md",
      "BasicSynth.md",
      "Broadcaster Starting Point.md",
      "Button Pack.md",
      "Choke Off Note.md",
      "Colour the Keyboard.md",
      "Console.md",
      "Control 3 parameters in 3 ranges with 1 Knob..md",
      "Date.md",
      "Dynamic List.md",
      "Global Modulator Container.md",
      "GLSL Hello World.md",
      "GLSL MorphBall.md",
      "GLSL Slider.md",
      "Loop a filmstrip.md",
      "Lottie Hello World.md",
      "Micro Tuner.md",
      "Modulate a circle with a Gain LFO.md",
      "Open a Website.md",
      "Ping Ping Delay.md",
      "Play chords from single notes.md",
      "Press a button to play a specific MIDI note.md",
      "README.md",
      "RectHelpers.md",
      "Rotate an image.md",
      "Saving custom LFO Shapes.md",
      "Script references and callbacks for components.md",
      "ScriptPanel Slider.md",
      "Simple Page Logic.md",
      "SixState Filmstrip Button.md",
      "SnippetDB.md",
      "Stereo Widener.md",
      "Switch SampleMaps with a ComboBox.md",
      "Switch TableData.md",
      "Tabbed View.md",
      "Two linked Sliders.md",
      "Use the sustain pedal to switch between sound generators.md",
      "_Template.md"
    ],
    "category": 0,
    "editButton": false,
    "saveFileButton": 0,
    "newName": "Date",
    "addCategory": 3,
    "addTagList": [
      "ScriptAPI"
    ],
    "description": "Explores the ScriptAPI Date Object. ",
    "addButton": true,
    "settingButton": false,
    "searchBar": "",
    "closeButton": true,
    "downloadSnippets": "true",
    "downloadAssets": "true",
    "tagList": []
  },
  "Children": [
    {
      "Type": "List",
      "Children": [
        {
          "Type": "Column",
          "Text": "LabelText",
          "Children": [
            {
              "Type": "Button",
              "Text": "",
              "ID": "addButton",
              "Enabled": true,
              "Code": "showAddPage(false);\n",
              "InitValue": "",
              "UseInitValue": false,
              "Class": ".top-button",
              "Style": "",
              "NoLabel": true,
              "Help": "",
              "Required": false,
              "ButtonType": "",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true
            },
            {
              "Type": "Button",
              "Text": "",
              "ID": "editButton",
              "Enabled": true,
              "Code": "showAddPage(true);\n",
              "InitValue": "",
              "UseInitValue": false,
              "Class": ".top-button",
              "Style": "display:none;",
              "NoLabel": true,
              "Help": "",
              "Required": false,
              "ButtonType": "",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true
            },
            {
              "Type": "SimpleText",
              "Text": "Snippet Browser",
              "ID": "",
              "Class": "",
              "Style": "flex-grow: 1"
            },
            {
              "Type": "Button",
              "Text": "LabelText",
              "ID": "settingButton",
              "Enabled": true,
              "Code": "document.navigate(1);",
              "InitValue": "",
              "UseInitValue": false,
              "Class": ".top-button",
              "Style": "",
              "Help": "",
              "Required": false,
              "ButtonType": "",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true,
              "NoLabel": true
            }
          ],
          "ID": "",
          "Style": "",
          "Class": ".header-label",
          "UseChildState": false
        },
        {
          "Type": "List",
          "Text": "LabelText",
          "Children": [
            {
              "Type": "PersistentSettings",
              "Text": "LabelText",
              "ID": "snippetBrowser",
              "Filename": "snippetBrowser",
              "UseChildState": true,
              "Items": "snippetDirectory:\"\"",
              "UseProject": false,
              "ParseJSON": false
            },
            {
              "Type": "DirectoryScanner",
              "Text": "LabelText",
              "Source": "$snippetDirectory",
              "ID": "snippetRoot",
              "RelativePath": true,
              "Wildcard": "*.md",
              "Directory": false
            }
          ],
          "ID": "",
          "Foldable": false,
          "Folded": false,
          "Style": "display: none;",
          "UseChildState": false,
          "Class": ""
        },
        {
          "Type": "TextInput",
          "Text": "LabelText",
          "ID": "searchBar",
          "Enabled": true,
          "Code": "rebuildTable();",
          "InitValue": "",
          "UseInitValue": false,
          "Class": "",
          "Style": "",
          "EmptyText": "",
          "Required": false,
          "ParseArray": false,
          "Height": 80,
          "Items": "",
          "Help": "",
          "Multiline": false,
          "UseOnValue": true,
          "CallOnTyping": true,
          "NoLabel": false,
          "Autofocus": false
        },
        {
          "Type": "Column",
          "Text": "LabelText",
          "Children": [
            {
              "Type": "Button",
              "Text": "All",
              "ID": "category",
              "Enabled": true,
              "Code": "rebuildTable();",
              "InitValue": "0",
              "UseInitValue": true,
              "Class": ".category-button .first-child",
              "Style": "",
              "Help": "",
              "Required": false,
              "ButtonType": "Text",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true,
              "NoLabel": true
            },
            {
              "Type": "Button",
              "Text": "Modules",
              "ID": "category",
              "Enabled": true,
              "Code": "rebuildTable();",
              "InitValue": "",
              "UseInitValue": false,
              "Class": ".category-button",
              "Style": "",
              "Help": "",
              "Required": false,
              "ButtonType": "Text",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true,
              "NoLabel": true
            },
            {
              "Type": "Button",
              "Text": "MIDI",
              "ID": "category",
              "Enabled": true,
              "Code": "rebuildTable();",
              "InitValue": "",
              "UseInitValue": false,
              "Class": ".category-button",
              "Style": "",
              "Help": "",
              "Required": false,
              "ButtonType": "Text",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true,
              "NoLabel": true
            },
            {
              "Type": "Button",
              "Text": "Scripting",
              "ID": "category",
              "Enabled": true,
              "Code": "rebuildTable();",
              "InitValue": "",
              "UseInitValue": false,
              "Class": ".category-button",
              "Style": "",
              "Help": "",
              "Required": false,
              "ButtonType": "Text",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true,
              "NoLabel": true
            },
            {
              "Type": "Button",
              "Text": "Scriptnode",
              "ID": "category",
              "Enabled": true,
              "Code": "rebuildTable();",
              "InitValue": "",
              "UseInitValue": false,
              "Class": ".category-button",
              "Style": "",
              "Help": "",
              "Required": false,
              "ButtonType": "Text",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true,
              "NoLabel": true
            },
            {
              "Type": "Button",
              "Text": "UI",
              "ID": "category",
              "Enabled": true,
              "Code": "rebuildTable();",
              "InitValue": "",
              "UseInitValue": false,
              "Class": ".category-button .last-child",
              "Style": "",
              "Help": "",
              "Required": false,
              "ButtonType": "Text",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true,
              "NoLabel": true
            }
          ],
          "ID": "",
          "Style": "gap:1px;height: auto;",
          "Class": "",
          "UseChildState": false
        },
        {
          "Type": "TagList",
          "Text": "LabelText",
          "ID": "tagList",
          "Items": "ScriptPanel\nGLSL\nScriptAPI\nfull-project\nBroadcaster\n\"\"\nLayout\nModulator\nLottie\nTool\n",
          "Class": "",
          "Style": "",
          "Code": "rebuildTable();",
          "UseOnValue": true
        },
        {
          "Type": "Table",
          "Text": "LabelText",
          "ValueMode": "Row",
          "ID": "snippetList",
          "Columns": "name:Name;max-width:-1;\nname:Author;max-width: 140px;width: 110px;",
          "Items": "A ball shooting Game.md| christoph-hart |\nA simple OpenGL circle.md| undefined |\nArray.md| do-mayer |\nBasicSynth.md| christoph-hart |\nBroadcaster Starting Point.md| dhealey |\nButton Pack.md| christoph-hart |\nChoke Off Note.md| christoph-hart |\nColour the Keyboard.md| do-mayer |\nConsole.md| do-mayer |\nControl 3 parameters in 3 ranges with 1 Knob..md| christoph-hart |\nDate.md| do-mayer |\nDynamic List.md| christoph-hart |\nGlobal Modulator Container.md| do-mayer |\nGLSL Hello World.md| do-mayer |\nGLSL MorphBall.md| christoph-hart |\nGLSL Slider.md| christoph-hart |\nLoop a filmstrip.md| christoph-hart |\nLottie Hello World.md| christoph-hart |\nMicro Tuner.md| do-mayer |\nModulate a circle with a Gain LFO.md| do-mayer |\nOpen a Website.md| christoph-hart |\nPing Ping Delay.md|  |\nPlay chords from single notes.md| christoph-hart |\nPress a button to play a specific MIDI note.md| do-mayer |\nRectHelpers.md| christoph-hart |\nRotate an image.md| do-mayer |\nSaving custom LFO Shapes.md| christoph-hart |\nScript references and callbacks for components.md| do-mayer |\nScriptPanel Slider.md| christoph-hart |\nSimple Page Logic.md| undefined |\nSixState Filmstrip Button.md| christoph-hart |\nStereo Widener.md| beyhan-kilic |\nSwitch SampleMaps with a ComboBox.md| christoph-hart |\nSwitch TableData.md| christoph-hart |\nTabbed View.md| christoph-hart |\nTwo linked Sliders.md| christoph-hart |\nUse the sustain pedal to switch between sound generators.md|  |\n",
          "Class": "",
          "Style": "",
          "FilterFunction": "showItem",
          "Code": "Console.print(value);",
          "Multiline": false,
          "UseFilter": true,
          "UseOnValue": false
        },
        {
          "Type": "MarkdownText",
          "Text": "Implements the ScriptAPI Array function. \n\n",
          "ID": "descriptionDisplay",
          "Class": ".description",
          "Style": "font-size: 18px; height: 180px;"
        },
        {
          "Type": "JavascriptFunction",
          "Text": "LabelText",
          "ID": "JavascriptFunctionId",
          "CallOnNext": false,
          "Code": "var CATEGORIES = [\"All\", \"Modules\", \"MIDI\", \"Scripting\", \"Scriptnode\", \"UI\"];\n\r\nparsedData = [];\r\n\nvar rebuildTable = function()\n{\n\n\t//b.setAttribute(\"disabled\", currentlyLoadedData == 0);\n\t//b.updateElement();\n\n\ttable.updateElement();\n};\n\nvar showAddPage = function(editCurrentSnippet)\n{\n\tstate.saveFileButton = false;\n\t\n\tif(!editCurrentSnippet)\n\t{\n\t\tstate.newName = \"\";\n\t\tstate.description = \"\";\n\t\tstate.addCategory = 0;\n\t\tstate.addTagList = [];\n\t}\n\telse if (currentlyLoadedData != 0)\n\t{\n\t\tvar catValue = CATEGORIES.indexOf(currentlyLoadedData.category);\n\t\t\n\t\tConsole.print(\"CAT: \" + catValue);\n\t\t\n\t\tstate.newName = currentlyLoadedData.name.split(\".\")[0];\n\t\tstate.addCategory = catValue;\n\t\tstate.addTagList = currentlyLoadedData.tags.clone();\n\t\t\n\t\tConsole.print(\"TAGS: \" + trace(currentlyLoadedData.tags.clone()));\n\t\t\n\t\tstate.description = currentlyLoadedData.description;\n\t}\n\t\n\t\n\tdocument.navigate(2);\n};\n\nvar showItem = function(index, data)\n{\n\tvar name = data[0];\n\n\tif(state.category != 0)\n\t{\n\t\tvar cc = CATEGORIES[state.category];\n\t\tvar tc = parsedData[index].category;\n\t\t\n\t\tif(cc != tc)\n\t\t\treturn false;\n\t}\n\t\n\tvar tagFound = state.tagList.length == 0;\n\t\n\tfor(i = 0; i < state.tagList.length; i++)\n\t{\n\t\tvar tt = parsedData[index].tags;\n\t\t\n\t\tif(tt.indexOf(state.tagList[i]) != -1)\n\t\t\ttagFound = true;\n\t}\n\t\n\tif(!tagFound)\n\t\treturn false;\n\t\n\tif(state.searchBar.length > 0)\n\t{\n\t\tif(name.toLowerCase().indexOf(state.searchBar.toLowerCase()) == -1)\n\t\t\treturn false;\n\t}\n\t\n\treturn true;\n};\n\r\nvar hiddenItems = [\"README.md\", \"LICENSE.m\", \"_Template.md\", \"SnippetDB.md\"];\r\n\r\nvar tags = [];\r\n\r\nfor(i = 0; i < state.snippetRoot.length; i++)\r\n{\r\n\tvar item = state.snippetRoot[i];\r\n\r\n\tif(hiddenItems.indexOf(item) != -1)\r\n\t\tcontinue;\r\n\r\n\tvar content = document.readFile(state.snippetDirectory + \"/\" + state.snippetRoot[i]);\r\n\tcontent = content.substring(3, 100000);\r\n\tvar end = content.indexOf(\"---\");\r\n\tvar header = content.substring(0, end);\r\n\tvar description = content.substring(end + 4, 100000);\r\n\tvar ml = header.split(\"\\n\");\r\n\tvar data = {};\r\n\t\r\n\tdata[\"name\"] = item;\r\n\tdata[\"description\"] = description;\r\n\t\r\n\tdata.tags = [];\r\n\t\r\n\tfor(j = 0; j < ml.length; j++)\r\n\t{\r\n\t\tvar kv = ml[j].split(\":\");\r\n\t\tvar key = kv[0];\r\n\t\t\t\r\n\t\tif(key == \"tags\")\r\n\t\t{\r\n\t\t\tvar tagList = kv[1].split(\",\");\r\n\t\t\t\r\n\t\t\tfor(t = 0; t < tagList.length; t++)\r\n\t\t\t{\r\n\t\t\t\tvar tt = tagList[t].trim();\r\n\t\t\t\t\r\n\t\t\t\tif(tt.length > 0)\r\n\t\t\t\t\tdata.tags.push(tt);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(key.length > 0)\r\n\t\t\t\tdata[key] = kv[1].trim();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfor(j = 0; j < data.tags.length; j++)\r\n\t{\r\n\t\tif(tags.indexOf(data.tags[j]) == -1)\r\n\t\t\ttags.push(data.tags[j]);\r\n\t}\r\n\t\r\n\tparsedData.push(data);\r\n}\r\n\r\nvar tagItems = \"\";\r\n\r\nfor(i = 0; i < tags.length; i++)\r\n\ttagItems += tags[i] + \"\\n\";\r\n\r\nvar tl = document.getElementById(\"tagList\");\r\ntl.setAttribute(\"items\", tagItems);\r\n\r\nvar table = document.getElementById(\"snippetList\");\r\n\r\nvar newItems = \"\";\r\n\r\nfor(i = 0; i < parsedData.length; i++)\r\n{\r\n\tvar item = parsedData[i];\r\n\r\n\tif(hiddenItems.indexOf(item.name) != -1)\r\n\t\tcontinue;\r\n\r\n\tnewItems += item.name + \"| \" + item.author + \" |\";\r\n\t\r\n\tif(i != state.snippetRoot.length - 1)\r\n\t\tnewItems += \"\\n\";\t\r\n}\r\n\r\ntable.setAttribute(\"items\", newItems);\r\n\ntable.addEventListener(\"select\", function()\n{\n\tvar data = parsedData[this.originalRow];\n\tdescription.innerText = data.description;\n});\n\nvar loadSnippet = document.bindCallback(\"loadSnippet\", function(fullPath, category)\n{\n\tConsole.print(\"LOAD SNIPPET: \" + fullPath + \" from category \" + category);\n});\n\nvar currentlyLoadedData = 0;\n\nvar loadFunction = function()\n{\n\tvar data = parsedData[this.originalRow];\n\tcurrentlyLoadedData = data;\n\t\n\tdocument.getElementById(\"editButton\").style.display = \"flex\";\n\t\n\t\n\tloadSnippet(data.HiseSnippet, data.category);\n};\n\ntable.addEventListener(\"dblclick\", loadFunction);\ntable.addEventListener(\"keydown\", loadFunction);\n\r\nvar description = document.getElementById(\"descriptionDisplay\");\r\ndescription.innerText = \"Please double click a snippet to load...\";\r\n\nif(state.snippetDirectory.length == 0)\n{\n\tdocument.navigate(1);\n}\n\nvar editButton = document.getElementById(\"editButton\");\neditButton.style.display = \"none\";\n\nrebuildTable();\n"
        }
      ],
      "ID": "",
      "Text": "",
      "Foldable": false,
      "Folded": false,
      "Style": "gap: 10px; height: 100%;",
      "UseChildState": false,
      "Class": ""
    },
    {
      "Type": "List",
      "Children": [
        {
          "Type": "Column",
          "Text": "LabelText",
          "Children": [
            {
              "Type": "SimpleText",
              "Text": "Snippet Browser",
              "ID": "",
              "Class": "#headerlabel",
              "Style": "flex-grow: 1;"
            },
            {
              "Type": "Button",
              "Text": "LabelText",
              "ID": "applyButton",
              "Enabled": true,
              "Code": "document.navigate(0);",
              "InitValue": "",
              "UseInitValue": false,
              "Class": ".top-button",
              "Style": "",
              "Help": "",
              "Required": false,
              "ButtonType": "",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true,
              "NoLabel": true
            }
          ],
          "ID": "",
          "Style": "",
          "Class": ".header-label",
          "UseChildState": false
        },
        {
          "Type": "MarkdownText",
          "Text": "Setup the snippet directory and download the demo assets & snippet data.\n\n",
          "ID": "",
          "Class": "",
          "Style": ""
        },
        {
          "Type": "PersistentSettings",
          "Text": "LabelText",
          "ID": "snippetBrowser",
          "Filename": "snippetBrowser",
          "UseChildState": true,
          "Items": "snippetDirectory:\"\"",
          "UseProject": false,
          "ParseJSON": false
        },
        {
          "Type": "List",
          "Text": "LabelText",
          "Children": [
            {
              "Type": "SimpleText",
              "Text": "Snippet Directory",
              "ID": "",
              "Style": "text-align: left; width: 100%;",
              "Class": ""
            },
            {
              "Type": "FileSelector",
              "Text": "Directory",
              "ID": "snippetDirectory",
              "Enabled": true,
              "Code": "// initialisation, will be called on page load\nConsole.print(\"init\");\n\nelement.onValue = function(value)\n{\n\t// Will be called whenever the value changes\n\tConsole.print(value);\n}\n",
              "InitValue": "",
              "UseInitValue": false,
              "Class": "",
              "Style": "",
              "Required": true,
              "Help": "The location where you want to store the snippets.",
              "Directory": true,
              "Wildcard": "",
              "SaveFile": false,
              "UseOnValue": false,
              "NoLabel": false
            },
            {
              "Type": "SimpleText",
              "Text": "Username",
              "ID": "",
              "Style": "text-align: left; width: 100%;margin-top: 10px;",
              "Class": ""
            },
            {
              "Type": "TextInput",
              "Text": "",
              "ID": "TextInputId",
              "Enabled": true,
              "Code": "Console.print(value);",
              "InitValue": "",
              "UseInitValue": false,
              "Class": "",
              "Style": "width: 100%;",
              "NoLabel": false,
              "EmptyText": "",
              "Required": false,
              "ParseArray": false,
              "Height": 80,
              "Items": "",
              "Help": "The name that is used when you create snippets. Make it your HISE user forum name for increased karma!",
              "Multiline": false,
              "Autofocus": false,
              "UseOnValue": false,
              "CallOnTyping": false
            }
          ],
          "ID": "",
          "Foldable": false,
          "Folded": false,
          "Style": "background: #282828; padding: 20px; border-radius: 3px; border: 1px solid #444;",
          "UseChildState": false,
          "Class": ".settings-panel"
        },
        {
          "Type": "List",
          "Text": "LabelText",
          "Children": [
            {
              "Type": "Button",
              "Text": "Snippets",
              "ID": "downloadSnippets",
              "Enabled": true,
              "Code": "// initialisation, will be called on page load\nConsole.print(\"init\");\n\nelement.onValue = function(value)\n{\n\t// Will be called whenever the value changes\n\tConsole.print(value);\n}\n",
              "InitValue": "true",
              "UseInitValue": true,
              "Class": "",
              "Style": "",
              "Help": "Untick this if you don't want to download the snippets (most likely because you've setup the target folder as Git repository already).",
              "Required": false,
              "ButtonType": "",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": false,
              "NoLabel": ""
            },
            {
              "Type": "DownloadTask",
              "Text": "Download",
              "ID": "downloadSnippets",
              "CallOnNext": true,
              "Class": "",
              "Style": "",
              "Source": "https://github.com/qdr/HiseSnippetDB/archive/refs/heads/main.zip",
              "Target": "$snippetDirectory/snippets.zip",
              "ExtraHeaders": "",
              "UsePost": false
            },
            {
              "Type": "UnzipTask",
              "Text": "Extract",
              "ID": "extractSnippets",
              "CallOnNext": true,
              "Overwrite": true,
              "Source": "$snippetDirectory/snippets.zip",
              "Class": "",
              "Style": "margin-bottom: 40px;",
              "Target": "$snippetDirectory",
              "Cleanup": true,
              "SkipFirstFolder": true,
              "SkipIfNoSource": true
            },
            {
              "Type": "Button",
              "Text": "Assets",
              "ID": "downloadAssets",
              "Enabled": true,
              "Code": "// initialisation, will be called on page load\nConsole.print(\"init\");\n\nelement.onValue = function(value)\n{\n\t// Will be called whenever the value changes\n\tConsole.print(value);\n}\n",
              "InitValue": "true",
              "UseInitValue": true,
              "Class": "",
              "Style": "",
              "Help": "Untick this if you don't want to download the example assets (about 50MB)",
              "Required": false,
              "ButtonType": "",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": false,
              "NoLabel": ""
            },
            {
              "Type": "DownloadTask",
              "Text": "Download",
              "ID": "downloadAssets",
              "CallOnNext": true,
              "Class": "",
              "Style": "",
              "Source": "https://github.com/qdr/HiseSnippetDB/releases/download/1.0.0/Assets.zip",
              "Target": "$snippetDirectory/assets.zip",
              "ExtraHeaders": "",
              "UsePost": false
            },
            {
              "Type": "UnzipTask",
              "Text": "Extract",
              "ID": "extractAssets",
              "CallOnNext": true,
              "Overwrite": true,
              "Class": "",
              "Style": "",
              "Source": "$snippetDirectory/assets.zip",
              "Target": "$snippetDirectory/Assets",
              "Cleanup": true,
              "SkipIfNoSource": true,
              "SkipFirstFolder": false
            }
          ],
          "ID": "",
          "Foldable": false,
          "Folded": false,
          "Style": "background: #282828; padding: 20px; border-radius: 3px; border: 1px solid #444;",
          "UseChildState": false,
          "Class": ""
        }
      ],
      "ID": "",
      "Text": "",
      "Foldable": false,
      "Folded": false,
      "Style": "gap: 10px; ",
      "UseChildState": false,
      "Class": ".setup-page"
    },
    {
      "Type": "List",
      "Children": [
        {
          "Type": "Column",
          "Text": "LabelText",
          "Children": [
            {
              "Type": "SimpleText",
              "Text": "Edit Snippet",
              "ID": "editTitle",
              "Class": "",
              "Style": "flex-grow: 1;"
            },
            {
              "Type": "Button",
              "Text": "LabelText",
              "ID": "closeButton",
              "Enabled": true,
              "Code": "document.navigate(0, false);\n",
              "InitValue": "",
              "UseInitValue": false,
              "Class": ".top-button",
              "Style": "",
              "NoLabel": true,
              "Help": "",
              "Required": false,
              "ButtonType": "",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true
            }
          ],
          "ID": "",
          "Class": ".header-label",
          "Style": "",
          "UseChildState": false
        },
        {
          "Type": "List",
          "Text": "LabelText",
          "Children": [
            {
              "Type": "TextInput",
              "Text": "Name",
              "ID": "newName",
              "Enabled": true,
              "Code": "Console.print(value);",
              "InitValue": "",
              "UseInitValue": false,
              "Class": "",
              "Style": "",
              "NoLabel": false,
              "EmptyText": "",
              "Required": true,
              "ParseArray": false,
              "Height": 80,
              "Items": "",
              "Help": "Select the filename for the snippet. It will save a markdown file with the snippet data and the supplied metadata.\n",
              "Multiline": false,
              "Autofocus": false,
              "UseOnValue": false,
              "CallOnTyping": false
            },
            {
              "Type": "Column",
              "Text": "LabelText",
              "Children": [
                {
                  "Type": "Button",
                  "Text": "All",
                  "ID": "addCategory",
                  "Enabled": true,
                  "Code": "Console.print(value);",
                  "InitValue": "0",
                  "UseInitValue": true,
                  "Class": ".category-button .first-child",
                  "Style": "",
                  "Help": "",
                  "Required": false,
                  "ButtonType": "Text",
                  "Icon": "",
                  "Trigger": false,
                  "UseOnValue": false,
                  "NoLabel": true
                },
                {
                  "Type": "Button",
                  "Text": "Modules",
                  "ID": "addCategory",
                  "Enabled": true,
                  "Code": "Console.print(value);",
                  "InitValue": "",
                  "UseInitValue": false,
                  "Class": ".category-button",
                  "Style": "",
                  "Help": "",
                  "Required": false,
                  "ButtonType": "Text",
                  "Icon": "",
                  "Trigger": false,
                  "UseOnValue": false,
                  "NoLabel": true
                },
                {
                  "Type": "Button",
                  "Text": "MIDI",
                  "ID": "addCategory",
                  "Enabled": true,
                  "Code": "Console.print(value);",
                  "InitValue": "",
                  "UseInitValue": false,
                  "Class": ".category-button",
                  "Style": "",
                  "Help": "",
                  "Required": false,
                  "ButtonType": "Text",
                  "Icon": "",
                  "Trigger": false,
                  "UseOnValue": false,
                  "NoLabel": true
                },
                {
                  "Type": "Button",
                  "Text": "Scripting",
                  "ID": "addCategory",
                  "Enabled": true,
                  "Code": "Console.print(value);",
                  "InitValue": "",
                  "UseInitValue": false,
                  "Class": ".category-button",
                  "Style": "",
                  "Help": "",
                  "Required": false,
                  "ButtonType": "Text",
                  "Icon": "",
                  "Trigger": false,
                  "UseOnValue": false,
                  "NoLabel": true
                },
                {
                  "Type": "Button",
                  "Text": "Scriptnode",
                  "ID": "addCategory",
                  "Enabled": true,
                  "Code": "Console.print(value);",
                  "InitValue": "",
                  "UseInitValue": false,
                  "Class": ".category-button",
                  "Style": "",
                  "Help": "",
                  "Required": false,
                  "ButtonType": "Text",
                  "Icon": "",
                  "Trigger": false,
                  "UseOnValue": false,
                  "NoLabel": true
                },
                {
                  "Type": "Button",
                  "Text": "UI",
                  "ID": "addCategory",
                  "Enabled": true,
                  "Code": "Console.print(value);",
                  "InitValue": "",
                  "UseInitValue": false,
                  "Class": ".category-button .last-child",
                  "Style": "",
                  "Help": "",
                  "Required": false,
                  "ButtonType": "Text",
                  "Icon": "",
                  "Trigger": false,
                  "UseOnValue": false,
                  "NoLabel": true
                }
              ],
              "ID": "",
              "Style": "gap:1px;height: auto;",
              "Class": "",
              "UseChildState": false
            },
            {
              "Type": "TagList",
              "Text": "LabelText",
              "ID": "addTagList",
              "Items": "ScriptPanel\nScriptAPI\nfull-project\nBroadcaster\nLayout\nModulator\nGLSL\nLottie\nFullProject\nTool\nPrivate",
              "Class": "",
              "Style": "",
              "Code": "Console.print(value);",
              "UseOnValue": false
            },
            {
              "Type": "SimpleText",
              "Text": "Description",
              "ID": "",
              "Style": "width: 100%; text-align: left;",
              "Class": ""
            },
            {
              "Type": "TextInput",
              "Text": "",
              "ID": "description",
              "Enabled": true,
              "Code": " ",
              "InitValue": "",
              "UseInitValue": false,
              "Class": "",
              "Style": "flex-grow: 2;  font-family: monospace;vertical-align: top; font-size: 12px; padding-top: 8px; ",
              "NoLabel": true,
              "EmptyText": "",
              "Required": true,
              "ParseArray": false,
              "Height": 80,
              "Items": "",
              "Help": "",
              "Multiline": true,
              "Autofocus": false,
              "UseOnValue": false,
              "CallOnTyping": true
            },
            {
              "Type": "SimpleText",
              "Text": "Preview",
              "ID": "",
              "Style": "width: 100%; text-align: left;",
              "Class": ""
            },
            {
              "Type": "MarkdownText",
              "Text": "Explores the ScriptAPI Date Object. ",
              "ID": "descriptionPreview",
              "Class": ".description",
              "Style": "font-size: 18px; height: 180px;"
            },
            {
              "Type": "Button",
              "Text": "Save file",
              "ID": "saveFileButton",
              "Enabled": true,
              "Code": "document.navigate(0, true);",
              "InitValue": "false",
              "UseInitValue": true,
              "Class": "",
              "Style": "",
              "NoLabel": false,
              "Help": "Click in order to save the file and return to the snippet browser.",
              "Required": false,
              "ButtonType": "Toggle",
              "Icon": "",
              "Trigger": false,
              "UseOnValue": true
            },
            {
              "Type": "JavascriptFunction",
              "Text": "LabelText",
              "ID": "",
              "CallOnNext": false,
              "Code": "\ndocument.getElementById(\"editTitle\").innerText = state.newName.length > 0 ? \"Edit Snippet\" : \"Add Snippet\";\n\ndocument.getElementById(\"descriptionPreview\").innerText = \"\";\ndocument.getElementById(\"description\").addEventListener(\"change\", function()\n{\n\tConsole.print(\"VALUE: \" + this.value);\n\t\n\n\tdocument.getElementById(\"descriptionPreview\").innerText = this.value;\n});\n\n",
              "Class": "",
              "Style": ""
            }
          ],
          "ID": "",
          "Foldable": false,
          "Folded": false,
          "Style": "border: 1px solid #222; padding: 15px; gap: 15px; flex-grow: 1;",
          "UseChildState": false,
          "Class": ""
        },
        {
          "Type": "JavascriptFunction",
          "Text": "LabelText",
          "ID": "",
          "CallOnNext": true,
          "Class": "",
          "Style": "",
          "Code": "function appendLine(key, value)\n{\n\tmd += \"\" + key + \": \";\n\t\n\tif(typeof(value) == \"object\")\n\t{\n\t\tfor(i = 0; i < value.length; i++)\n\t\t{\n\t\t\tmd += value[i];\n\t\t\tif(i != value.length -1)\n\t\t\t   md += \", \";\n\t\t}\n\t\t\n\t\tmd += \"\\n\";\n\t}\n\telse\n\t{\n\t\tmd += value + \"\\n\";\n\t}\n}\n\nvar exportSnippet = document.bindCallback(\"exportSnippet\", function()\n{\n\treturn \"This will be the snippet\";\n});\n\nif(state.newName.length > 0)\n{\n\tConsole.print(\"SAVE\");\n\t\n\t// Write the metadata\n\tvar md = \"\";\n\t\n\tmd += \"---\\n\";\n\t\n\tvar CATEGORIES = [\"All\", \"Modules\", \"MIDI\", \"Scripting\", \"Scriptnode\", \"UI\"];\n\t\t\n\tappendLine(\"author\", state.author);\n\tappendLine(\"category\", CATEGORIES[state.addCategory]);\n\tappendLine(\"tags\", state.addTagList);\n\tappendLine(\"active\", \"true\");\n\tappendLine(\"HiseSnippet\", exportSnippet());\n\t\n\tmd += \"---\\n\";\n\t\n\t// Write the file\n\tvar fileContent = md;\n\tfileContent += \"\\n\" + state.description;\n\tvar newFile = state.snippetDirectory + \"/\" + state.newName + \".md\";\n\tdocument.writeFile(newFile, fileContent);\n\t\n}\n\n\n"
        }
      ],
      "ID": "",
      "Text": "",
      "Foldable": false,
      "Folded": false,
      "Style": "height: 100%;",
      "UseChildState": false,
      "Class": ""
    },
    {
      "Type": "List"
    },
    {
      "Type": "List"
    }
  ],
  "Assets": [
    {
      "Type": 3,
      "ID": "loadBrowser",
      "RelativePath": true,
      "OperatingSystem": 0,
      "Filename": "loadBrowser.js"
    }
  ]
}